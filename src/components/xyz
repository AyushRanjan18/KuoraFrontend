    const [userRegistration, setuserRegistration] = useState({
        firstName :"",
        lastName :"",
        email : "",
        password : "",
        selected : "",
        bio : "",
        check : "",
    });

   const handleInput =(e)=> {
        const name = e.target.name;
        const value = e.target.value;
        console.log(name,value);
        setuserRegistration({... userRegistration, [name] : value})
   }
   const [records, setrecords] = useState([]);



   dotenv.config()
mongoose.connect("process.env.DATABASE_ACCESS", ()=>console.log("DB connected"))

app.use(express.json())


app.use(express.json())
app.use(cors())
app.use('/app', routesURL)
app.listen(4000, ()=> console.log("Server is running"));



const signUpTemplate = mongoose.Schema({
    firstName :{
        type:String,
        required:true
    },
    lastName :{
        type:String,
        required:true
    },
    email :{
        type:String,
        required:true
    },
    password:{
        type:String,
        required:true
    },
    staff:{
        type:String,
        required:true
    },
    bio:{
        type:String,
        required:true
    }
    
},{timestamps: true})



router.post('/signup',(request,response)=>{
    const signedupUser = new signUpTemplateCopy({
        firstName:request.body.firstName,
        lastName:request.body.lastName,
        email:request.body.email,
        password:request.body.password,
        staff:request.body.staff,
        bio:request.body.bio
    })
    signedupUser.save()
    .then(data=>{
        response.json(data)
    })
    .catch(error=>{
        response.json(error)
    })
})